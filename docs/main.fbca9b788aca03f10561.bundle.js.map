{"version":3,"file":"main.fbca9b788aca03f10561.bundle.js","sources":["webpack:///./src/TextArea.js"],"sourcesContent":["import { jsx, css } from '@emotion/core'\nimport { useEffect, useRef } from 'react'\nimport T from 'prop-types'\nimport autosize from 'autosize'\n\nconst baseTextArea = css`\n  width: 100%;\n  height: 48px;\n  padding: 0px;\n  box-sizing: border-box;\n  padding: 9px;\n  border: 0;\n  outline: none;\n  background-color: #fafafa;\n  font-family: inherit;\n  font-size: 24px;\n  text-align: center;\n  resize: none;\n\n  &::placeholder {\n    color: #979797;\n  }\n\n  &:focus {\n    &::placeholder {\n      color: transparent;\n    }\n  }\n`\n\nconst mobileTextArea = css`\n  @media screen and (max-width: 600px) {\n    font-size: 16px;\n  }\n`\n\nexport const TextArea = ({ defaultValue, ...props }) => {\n  const textareaRef = useRef(null)\n  useEffect(() => {\n    autosize(textareaRef.current)\n  }, [defaultValue])\n\n  return (\n    <textarea\n      ref={textareaRef}\n      css={[baseTextArea, mobileTextArea]}\n      data-enable-grammarly=\"false\"\n      defaultValue={defaultValue}\n      {...props}\n    />\n  )\n}\n\nTextArea.propTypes = {\n  defaultValue: T.string,\n}\n"],"mappings":"AAKA","sourceRoot":""}